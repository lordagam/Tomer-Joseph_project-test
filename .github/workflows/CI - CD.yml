name: CI Docker Compose Actions Workflow
on: push
jobs:
 CI-Build-Test-Push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build the stack
        run: docker-compose up -d
      
      
      - name: Run curl Test
        run: |
          sudo apt-get update; sudo apt-get install -y curl && curl http://localhost:3000
     
      
      #- name: Run curl
       # run: |
        #  curl http://localhost:3000

      #- name: Snyk example
      #- uses: actions/checkout@master
      #- uses: snyk/actions/setup@master
      #- uses: actions/setup-go@v1
      #  with:
      #    go-version: '1.13'
     
 Snyk-security:
    needs: CI-Build-Test-Push
    runs-on: ubuntu-latest
    steps:          
      - name: Snyk monitor
        run: snyk test
        env:
          SNYK_TOKEN: ${{ secrets.SNYKTOKEN }}

      #- name: Run Snyk to check Docker image for vulnerabilities
      #  uses: snyk/actions/docker@master
      #  env:
      #    SNYK_TOKEN: ${{ secrets.SNYKTOKEN }}
      #  with:
      #    image: lordagam/Tomer-Joseph_project-test


  
  #    - name: change image name 
   #     run: docker tag my-image-name:latest lordagam/github-repo-hello-world-war5:latest
   #   - name: Login to Docker Hub
   #     uses: docker/login-action@v2
    #    with:
   #         username: ${{ secrets.DOCKERHUB_USERNAME }}
   #         password: ${{ secrets.DOCKERHUB_TOKEN }}
 #     - name: docker push
  #      run: docker push lordagam/project_jo_tomer:frontend
        #run: docker push lordagam/project_jo_tomer:backend
        #run: docker push lordagam/project_jo_tomer:mariadb


 CD-Terraform:
    needs: CI-Build-Test-Push
    runs-on: self-hosted
    steps:          
      - uses: actions/checkout@v2
      - name: Build dir
        run: cd /~ && sudo mkdir jo-Test 
